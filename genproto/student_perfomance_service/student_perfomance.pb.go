// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: student_perfomance.proto

package student_perfomance_service

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StudentPerfomancePrimaryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StudentPerfomancePrimaryKey) Reset() {
	*x = StudentPerfomancePrimaryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_perfomance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentPerfomancePrimaryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentPerfomancePrimaryKey) ProtoMessage() {}

func (x *StudentPerfomancePrimaryKey) ProtoReflect() protoreflect.Message {
	mi := &file_student_perfomance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentPerfomancePrimaryKey.ProtoReflect.Descriptor instead.
func (*StudentPerfomancePrimaryKey) Descriptor() ([]byte, []int) {
	return file_student_perfomance_proto_rawDescGZIP(), []int{0}
}

func (x *StudentPerfomancePrimaryKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateStudentPerfomance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId  string  `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	ScheduleId string  `protobuf:"bytes,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	Attended   bool    `protobuf:"varint,3,opt,name=attended,proto3" json:"attended,omitempty"`
	TaskScore  float32 `protobuf:"fixed32,4,opt,name=task_score,json=taskScore,proto3" json:"task_score,omitempty"`
}

func (x *CreateStudentPerfomance) Reset() {
	*x = CreateStudentPerfomance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_perfomance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStudentPerfomance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStudentPerfomance) ProtoMessage() {}

func (x *CreateStudentPerfomance) ProtoReflect() protoreflect.Message {
	mi := &file_student_perfomance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStudentPerfomance.ProtoReflect.Descriptor instead.
func (*CreateStudentPerfomance) Descriptor() ([]byte, []int) {
	return file_student_perfomance_proto_rawDescGZIP(), []int{1}
}

func (x *CreateStudentPerfomance) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *CreateStudentPerfomance) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *CreateStudentPerfomance) GetAttended() bool {
	if x != nil {
		return x.Attended
	}
	return false
}

func (x *CreateStudentPerfomance) GetTaskScore() float32 {
	if x != nil {
		return x.TaskScore
	}
	return 0
}

type GetStudentPerfomance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId  string  `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	ScheduleId string  `protobuf:"bytes,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	Attended   bool    `protobuf:"varint,3,opt,name=attended,proto3" json:"attended,omitempty"`
	TaskScore  float32 `protobuf:"fixed32,4,opt,name=task_score,json=taskScore,proto3" json:"task_score,omitempty"`
	CreatedAt  string  `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  string  `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Id         string  `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetStudentPerfomance) Reset() {
	*x = GetStudentPerfomance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_perfomance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentPerfomance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentPerfomance) ProtoMessage() {}

func (x *GetStudentPerfomance) ProtoReflect() protoreflect.Message {
	mi := &file_student_perfomance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentPerfomance.ProtoReflect.Descriptor instead.
func (*GetStudentPerfomance) Descriptor() ([]byte, []int) {
	return file_student_perfomance_proto_rawDescGZIP(), []int{2}
}

func (x *GetStudentPerfomance) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *GetStudentPerfomance) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *GetStudentPerfomance) GetAttended() bool {
	if x != nil {
		return x.Attended
	}
	return false
}

func (x *GetStudentPerfomance) GetTaskScore() float32 {
	if x != nil {
		return x.TaskScore
	}
	return 0
}

func (x *GetStudentPerfomance) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetStudentPerfomance) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetStudentPerfomance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateStudentPerfomance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId  string  `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	ScheduleId string  `protobuf:"bytes,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	Attended   bool    `protobuf:"varint,3,opt,name=attended,proto3" json:"attended,omitempty"`
	TaskScore  float32 `protobuf:"fixed32,4,opt,name=task_score,json=taskScore,proto3" json:"task_score,omitempty"`
	Id         string  `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateStudentPerfomance) Reset() {
	*x = UpdateStudentPerfomance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_perfomance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStudentPerfomance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentPerfomance) ProtoMessage() {}

func (x *UpdateStudentPerfomance) ProtoReflect() protoreflect.Message {
	mi := &file_student_perfomance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentPerfomance.ProtoReflect.Descriptor instead.
func (*UpdateStudentPerfomance) Descriptor() ([]byte, []int) {
	return file_student_perfomance_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateStudentPerfomance) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *UpdateStudentPerfomance) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *UpdateStudentPerfomance) GetAttended() bool {
	if x != nil {
		return x.Attended
	}
	return false
}

func (x *UpdateStudentPerfomance) GetTaskScore() float32 {
	if x != nil {
		return x.TaskScore
	}
	return 0
}

func (x *UpdateStudentPerfomance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetListStudentPerfomanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetListStudentPerfomanceRequest) Reset() {
	*x = GetListStudentPerfomanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_perfomance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListStudentPerfomanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListStudentPerfomanceRequest) ProtoMessage() {}

func (x *GetListStudentPerfomanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_student_perfomance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListStudentPerfomanceRequest.ProtoReflect.Descriptor instead.
func (*GetListStudentPerfomanceRequest) Descriptor() ([]byte, []int) {
	return file_student_perfomance_proto_rawDescGZIP(), []int{4}
}

func (x *GetListStudentPerfomanceRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetListStudentPerfomanceRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListStudentPerfomanceRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetListStudentPerfomanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count              int64                   `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	StudentPerfomances []*GetStudentPerfomance `protobuf:"bytes,2,rep,name=StudentPerfomances,proto3" json:"StudentPerfomances,omitempty"`
}

func (x *GetListStudentPerfomanceResponse) Reset() {
	*x = GetListStudentPerfomanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_perfomance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListStudentPerfomanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListStudentPerfomanceResponse) ProtoMessage() {}

func (x *GetListStudentPerfomanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_student_perfomance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListStudentPerfomanceResponse.ProtoReflect.Descriptor instead.
func (*GetListStudentPerfomanceResponse) Descriptor() ([]byte, []int) {
	return file_student_perfomance_proto_rawDescGZIP(), []int{5}
}

func (x *GetListStudentPerfomanceResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetListStudentPerfomanceResponse) GetStudentPerfomances() []*GetStudentPerfomance {
	if x != nil {
		return x.StudentPerfomances
	}
	return nil
}

var File_student_perfomance_proto protoreflect.FileDescriptor

var file_student_perfomance_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x1b, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xdf, 0x01, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa4,
	0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x74,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x67, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x9d,
	0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x63, 0x0a, 0x12, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x12, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x32, 0xf9,
	0x04, 0x0a, 0x18, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x36, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x33, 0x2e,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x3a, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x33, 0x2e, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0x00, 0x12, 0x8c, 0x01, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e,
	0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72,
	0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f,
	0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72,
	0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x77, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x36, 0x2e, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x1a, 0x33, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65,
	0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x3a, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_student_perfomance_proto_rawDescOnce sync.Once
	file_student_perfomance_proto_rawDescData = file_student_perfomance_proto_rawDesc
)

func file_student_perfomance_proto_rawDescGZIP() []byte {
	file_student_perfomance_proto_rawDescOnce.Do(func() {
		file_student_perfomance_proto_rawDescData = protoimpl.X.CompressGZIP(file_student_perfomance_proto_rawDescData)
	})
	return file_student_perfomance_proto_rawDescData
}

var file_student_perfomance_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_student_perfomance_proto_goTypes = []interface{}{
	(*StudentPerfomancePrimaryKey)(nil),      // 0: student_perfomance_service_go.StudentPerfomancePrimaryKey
	(*CreateStudentPerfomance)(nil),          // 1: student_perfomance_service_go.CreateStudentPerfomance
	(*GetStudentPerfomance)(nil),             // 2: student_perfomance_service_go.GetStudentPerfomance
	(*UpdateStudentPerfomance)(nil),          // 3: student_perfomance_service_go.UpdateStudentPerfomance
	(*GetListStudentPerfomanceRequest)(nil),  // 4: student_perfomance_service_go.GetListStudentPerfomanceRequest
	(*GetListStudentPerfomanceResponse)(nil), // 5: student_perfomance_service_go.GetListStudentPerfomanceResponse
	(*empty.Empty)(nil),                      // 6: google.protobuf.Empty
}
var file_student_perfomance_proto_depIdxs = []int32{
	2, // 0: student_perfomance_service_go.GetListStudentPerfomanceResponse.StudentPerfomances:type_name -> student_perfomance_service_go.GetStudentPerfomance
	1, // 1: student_perfomance_service_go.StudentPerfomanceService.Create:input_type -> student_perfomance_service_go.CreateStudentPerfomance
	0, // 2: student_perfomance_service_go.StudentPerfomanceService.GetByID:input_type -> student_perfomance_service_go.StudentPerfomancePrimaryKey
	4, // 3: student_perfomance_service_go.StudentPerfomanceService.GetList:input_type -> student_perfomance_service_go.GetListStudentPerfomanceRequest
	3, // 4: student_perfomance_service_go.StudentPerfomanceService.Update:input_type -> student_perfomance_service_go.UpdateStudentPerfomance
	0, // 5: student_perfomance_service_go.StudentPerfomanceService.Delete:input_type -> student_perfomance_service_go.StudentPerfomancePrimaryKey
	2, // 6: student_perfomance_service_go.StudentPerfomanceService.Create:output_type -> student_perfomance_service_go.GetStudentPerfomance
	2, // 7: student_perfomance_service_go.StudentPerfomanceService.GetByID:output_type -> student_perfomance_service_go.GetStudentPerfomance
	5, // 8: student_perfomance_service_go.StudentPerfomanceService.GetList:output_type -> student_perfomance_service_go.GetListStudentPerfomanceResponse
	2, // 9: student_perfomance_service_go.StudentPerfomanceService.Update:output_type -> student_perfomance_service_go.GetStudentPerfomance
	6, // 10: student_perfomance_service_go.StudentPerfomanceService.Delete:output_type -> google.protobuf.Empty
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_student_perfomance_proto_init() }
func file_student_perfomance_proto_init() {
	if File_student_perfomance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_student_perfomance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentPerfomancePrimaryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_perfomance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStudentPerfomance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_perfomance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentPerfomance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_perfomance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStudentPerfomance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_perfomance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListStudentPerfomanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_perfomance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListStudentPerfomanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_student_perfomance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_student_perfomance_proto_goTypes,
		DependencyIndexes: file_student_perfomance_proto_depIdxs,
		MessageInfos:      file_student_perfomance_proto_msgTypes,
	}.Build()
	File_student_perfomance_proto = out.File
	file_student_perfomance_proto_rawDesc = nil
	file_student_perfomance_proto_goTypes = nil
	file_student_perfomance_proto_depIdxs = nil
}
